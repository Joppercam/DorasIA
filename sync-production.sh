#!/bin/bash

# DorasIA Production Sync Script
# ==============================
# Este script se ejecuta en el servidor para sincronizar con GitHub

# Configuraci√≥n
BRANCH="production"
DEPLOYMENT_PATH="/home/tu_usuario/public_html"
LOG_FILE="/home/tu_usuario/deployment.log"

# Colores
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# Funci√≥n de logging
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1" | tee -a $LOG_FILE
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR:${NC} $1" | tee -a $LOG_FILE
}

# Verificar que estamos en el directorio correcto
cd $DEPLOYMENT_PATH || exit 1

# Comprobar si hay cambios en el remoto
log "üîç Verificando cambios en GitHub..."
git fetch origin $BRANCH

LOCAL=$(git rev-parse HEAD)
REMOTE=$(git rev-parse origin/$BRANCH)

if [ $LOCAL = $REMOTE ]; then
    log "‚úÖ No hay cambios nuevos. Todo actualizado."
    exit 0
fi

# Hay cambios, proceder con la actualizaci√≥n
log "üöÄ Actualizando desde la rama $BRANCH..."

# Hacer backup del .env actual
cp .env .env.backup.$(date +%Y%m%d_%H%M%S)

# Pull de cambios
if git pull origin $BRANCH; then
    log "‚úÖ C√≥digo actualizado correctamente"
else
    error "Error al actualizar el c√≥digo"
    exit 1
fi

# Instalar/actualizar dependencias de Composer
log "üì¶ Actualizando dependencias PHP..."
composer install --no-dev --optimize-autoloader --no-interaction

# Instalar/actualizar dependencias de NPM y compilar assets
log "üì¶ Compilando assets..."
npm install --production
npm run build

# Ejecutar migraciones
log "üóÑÔ∏è Ejecutando migraciones..."
php artisan migrate --force

# Limpiar y optimizar cach√©s
log "üßπ Optimizando aplicaci√≥n..."
php artisan config:cache
php artisan route:cache
php artisan view:cache
php artisan optimize

# Limpiar cach√©s antiguos
php artisan cache:clear

# Establecer permisos correctos
log "üîí Configurando permisos..."
chmod -R 755 storage
chmod -R 755 bootstrap/cache

# Reiniciar servicios si es necesario (depende del hosting)
# Si tienes acceso a systemctl o supervisord, puedes reiniciar servicios aqu√≠

log "‚úÖ ¬°Actualizaci√≥n completada exitosamente!"
log "üìä Nueva versi√≥n: $(git rev-parse --short HEAD)"

# Opcional: Enviar notificaci√≥n (email, Slack, etc.)
# echo "Deployment completado en $(hostname)" | mail -s "Deployment Success" tu@email.com