#!/bin/bash

echo "üöÄ IMPORTACI√ìN COMPLETA DE DORASIA EN ESPA√ëOL"
echo "============================================="
echo "Este script realizar√° una importaci√≥n completa con traducciones en espa√±ol"
echo ""

# Verificar que existe la API key de OpenAI
if [ -z "$OPENAI_API_KEY" ]; then
    echo "‚ö†Ô∏è  ADVERTENCIA: No se detect√≥ OPENAI_API_KEY"
    echo "Las traducciones se saltar√°n autom√°ticamente"
    echo ""
fi

# Funci√≥n para mostrar progreso
show_progress() {
    echo "üìä PROGRESO ACTUAL:"
    echo "=================="
    
    php artisan tinker --execute "
        echo 'üì∫ Series: ' . App\Models\Series::count() . ' total\n';
        echo 'üë• Actores: ' . App\Models\Person::count() . ' total\n';
        echo 'üé¨ Cr√≠ticas: ' . App\Models\ProfessionalReview::count() . ' total\n';
        echo 'üì∞ Noticias: ' . App\Models\News::count() . ' total\n';
        echo 'üé≠ Series con actores: ' . App\Models\Series::has('people')->count() . '\n';
        echo 'üìù Series con cr√≠ticas: ' . App\Models\Series::has('professionalReviews')->count() . '\n';
        echo 'üìñ Actores con biograf√≠a en espa√±ol: ' . App\Models\Person::whereNotNull('biography_es')->count() . '\n';
    "
    echo ""
}

# PASO 1: Preparar base de datos
echo "üîß PASO 1: Preparando base de datos..."
echo "======================================"
php artisan migrate --force
php artisan cache:clear
php artisan config:clear
echo "‚úÖ Base de datos lista"
echo ""

# PASO 2: Importar series b√°sicas (si no existen)
echo "üì∫ PASO 2: Verificando series b√°sicas..."
echo "========================================"
SERIES_COUNT=$(php artisan tinker --execute "echo App\Models\Series::count();" | tail -1)

if [ "$SERIES_COUNT" -lt "50" ]; then
    echo "Importando series b√°sicas desde TMDB..."
    # Aqu√≠ tendr√≠as tu comando de importaci√≥n b√°sica de series
    # php artisan tmdb:import-series --limit=100
    echo "‚ÑπÔ∏è  Aseg√∫rate de tener series importadas antes de continuar"
else
    echo "‚úÖ Ya hay $SERIES_COUNT series en la base de datos"
fi
echo ""

# PASO 3: Importar actores con traducciones
echo "üë• PASO 3: Importando actores con traducciones en espa√±ol..."
echo "=========================================================="
echo "Importando actores para las 50 series m√°s populares..."

# Obtener series populares y importar actores
SERIES_IDS=$(php artisan tinker --execute "
    \$ids = App\Models\Series::whereNotNull('tmdb_id')
        ->orderBy('popularity', 'desc')
        ->take(50)
        ->pluck('id');
    echo implode(' ', \$ids->toArray());
" | tail -1)

TOTAL_SERIES=$(echo $SERIES_IDS | wc -w)
CURRENT=0

for id in $SERIES_IDS; do
    CURRENT=$((CURRENT + 1))
    echo "  [$CURRENT/$TOTAL_SERIES] ‚Üí Serie ID: $id"
    php artisan tmdb:import-actors --series=$id --quiet
done

echo "‚úÖ Actores importados con traducciones"
show_progress

# PASO 4: Importar cr√≠ticas profesionales
echo "üìù PASO 4: Importando cr√≠ticas profesionales..."
echo "=============================================="
echo "Importando cr√≠ticas para series con actores..."

SERIES_WITH_ACTORS=$(php artisan tinker --execute "
    \$ids = App\Models\Series::has('people')
        ->whereNotNull('tmdb_id')
        ->orderBy('popularity', 'desc')
        ->take(30)
        ->pluck('id');
    echo implode(' ', \$ids->toArray());
" | tail -1)

TOTAL_REVIEWS=$(echo $SERIES_WITH_ACTORS | wc -w)
CURRENT=0

for id in $SERIES_WITH_ACTORS; do
    CURRENT=$((CURRENT + 1))
    echo "  [$CURRENT/$TOTAL_REVIEWS] ‚Üí Serie ID: $id"
    php artisan reviews:import --series=$id --quiet
done

echo "‚úÖ Cr√≠ticas profesionales importadas"
show_progress

# PASO 5: Importar temporadas y episodios
echo "üì∫ PASO 5: Importando temporadas y episodios..."
echo "=============================================="
echo "Importando temporadas y episodios para las 20 series m√°s populares..."

SERIES_FOR_SEASONS=$(php artisan tinker --execute "
    \$ids = App\Models\Series::whereNotNull('tmdb_id')
        ->orderBy('popularity', 'desc')
        ->take(20)
        ->pluck('id');
    echo implode(' ', \$ids->toArray());
" | tail -1)

TOTAL_SEASONS_SERIES=$(echo $SERIES_FOR_SEASONS | wc -w)
CURRENT=0

for id in $SERIES_FOR_SEASONS; do
    CURRENT=$((CURRENT + 1))
    echo "  [$CURRENT/$TOTAL_SEASONS_SERIES] ‚Üí Temporadas para Serie ID: $id"
    php artisan tmdb:import-seasons --series=$id --quiet
done

echo "‚úÖ Temporadas y episodios importados"
show_progress

# PASO 6: Generar noticias (si tienes el comando)
echo "üì∞ PASO 6: Generando noticias..."
echo "==============================="
NEWS_COUNT=$(php artisan tinker --execute "echo App\Models\News::count();" | tail -1)

if [ "$NEWS_COUNT" -lt "20" ]; then
    echo "Generando noticias sobre K-dramas..."
    # php artisan news:generate --count=30
    echo "üí° Ejecuta manualmente: php artisan news:generate --count=30"
else
    echo "‚úÖ Ya hay $NEWS_COUNT noticias en la base de datos"
fi
echo ""

# PASO 7: Optimizar y cachear
echo "üîß PASO 7: Optimizando aplicaci√≥n..."
echo "==================================="
php artisan config:cache
php artisan route:cache
php artisan view:cache
echo "‚úÖ Aplicaci√≥n optimizada"
echo ""

# PASO 8: Estad√≠sticas finales
echo "üìä PASO 8: ESTAD√çSTICAS FINALES"
echo "==============================="
show_progress

echo "üéâ IMPORTACI√ìN COMPLETA FINALIZADA"
echo "=================================="
echo ""
echo "üìã Resumen de lo importado:"
echo "  ‚úÖ Series con actores y biograf√≠as en espa√±ol"
echo "  ‚úÖ Cr√≠ticas profesionales traducidas"
echo "  ‚úÖ Sistema de comentarios para series y actores"
echo "  ‚úÖ Traducciones autom√°ticas activadas"
echo ""
echo "üöÄ LISTO PARA PRODUCCI√ìN"
echo "======================="
echo "La aplicaci√≥n est√° lista para subir al hosting con:"
echo "  ‚Ä¢ Contenido completamente en espa√±ol"
echo "  ‚Ä¢ Datos reales de TMDB"
echo "  ‚Ä¢ Sistema de comentarios funcional"
echo "  ‚Ä¢ Traducciones autom√°ticas configuradas"
echo ""
echo "üí° Para importar M√ÅS contenido en el futuro:"
echo "   php artisan tmdb:import-actors --series=all"
echo "   php artisan reviews:import --series=all"
echo ""